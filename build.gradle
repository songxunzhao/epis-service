buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
		awsSdkVersion = '1.11.390'
		springBootAdminVersion = '2.1.3'
		springCloudSleuthVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		maven {
			url "http://dl.bintray.com/nilsmagnus/maven"
		}
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0")
		classpath("no.nils:wsdl2java:0.10")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'no.nils.wsdl2java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'com.gorylenko.gradle-git-properties'

jar {
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url "https://pubnexus.zerotech.ee/content/repositories/zeropublic/"
	}
}

processResources {
	from('.ebextensions/') {
		into '.ebextensions'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
		mavenBom "com.amazonaws:aws-java-sdk-bom:${awsSdkVersion}"
	}
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-amqp")
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation("de.codecentric:spring-boot-admin-starter-client")
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	runtimeOnly("org.springframework.boot:spring-boot-devtools")
	implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.3.RELEASE")
	implementation('net.sf.ehcache:ehcache')
	compileOnly('org.projectlombok:lombok:1.18.6')
	annotationProcessor('org.projectlombok:lombok:1.18.6')
	implementation("org.jsoup:jsoup:1.8.1")
	implementation('org.apache.commons:commons-lang3:3.5')

	implementation("io.sentry:sentry-logback:1.7.16")
	implementation('io.springfox:springfox-swagger2:2.6.1')
	implementation('io.springfox:springfox-swagger-ui:2.6.1')

	implementation('com.amazonaws:aws-java-sdk-ssm')

	implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	implementation('com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.8.10')

	implementation('com.mandrillapp.wrapper.lutung:lutung:0.0.7')

	implementation('org.springframework:spring-jms')
	implementation fileTree(dir: 'lib', include: '*.jar')

	// Java 9+ support
	wsdl2java 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
	wsdl2java 'javax.xml.bind:jaxb-api:2.3.1'
	wsdl2java 'javax.xml.ws:jaxws-api:2.3.1'
	wsdl2java 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
	wsdl2java 'javax.jws:javax.jws-api:1.1'

	implementation 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
	implementation 'javax.jws:javax.jws-api:1.1'

	implementation 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.11.0'

	// enable extension support for wsdl2java
	wsdl2java 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.11.0'
	wsdl2java 'org.jvnet.jaxb2_commons:jaxb2-basics:0.11.0'

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude module: "spock-core"
	}
	testImplementation("org.spockframework:spock-core:1.3-groovy-2.4")
	testImplementation("org.spockframework:spock-spring:1.3-groovy-2.4")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
	imports {
		mavenBom("de.codecentric:spring-boot-admin-dependencies:$springBootAdminVersion")
		mavenBom("org.springframework.cloud:spring-cloud-sleuth:$springCloudSleuthVersion")
	}
}


test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showCauses true
		showExceptions true
		showStackTraces true
		exceptionFormat = 'full'
	}
}

bootRun {

//	systemProperties['javax.net.debug'] = 'ssl'

//	systemProperties['com.sun.net.ssl.checkRevocation'] = 'false'
	systemProperty "file.encoding", "utf-8"
	systemProperty "spring.profiles.active", "dev"
}

wsdl2java {
	wsdlsToGenerate = [
		['-xjc-Xequals', '-xjc-XhashCode', '-xjc-XtoString', "$projectDir/src/main/resources/epis-wsdl/epis.wsdl"]
	]
	wsdlDir = file("$projectDir/src/main/resources/epis-wsdl")
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		html.enabled false
	}
}

check.dependsOn jacocoTestReport

task zipWithExtensions(type: Zip) {
	dependsOn jar
	from(jar.outputs.files.singleFile) {
		rename { "application.jar" }
	}
	from("$rootDir/etc/eb/.ebextensions") {
		into(".ebextensions")
	}
	from("$rootDir/etc/eb/Procfile")
}

assemble.dependsOn zipWithExtensions
