buildscript {
    ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "http://dl.bintray.com/nilsmagnus/maven"
		}
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("no.nils:wsdl2java:0.10")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'no.nils.wsdl2java'

jar {
	baseName = 'epis-service'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url "https://pubnexus.zerotech.ee/content/repositories/zeropublic/"
	}
}

processResources {
	from ('.ebextensions/') {
		into '.ebextensions'
	}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-amqp")
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	runtime("org.springframework.boot:spring-boot-devtools")
	runtime('org.postgresql:postgresql')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.security.oauth:spring-security-oauth2")
	compile("cglib:cglib-nodep:3.2.4")
	compile("org.projectlombok:lombok:1.16.12")
	compile("org.jsoup:jsoup:1.8.1")
	compile('org.apache.commons:commons-lang3:3.5')
	compile('com.tapstream:rollbar-logback:0.1.4')

	compile('com.getsentry.raven:raven-logback:7.8.3')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')

	compile('org.hibernate:hibernate-java8')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.8.10')

	compile('com.rollbar:rollbar:0.5.3')
	compile('com.mandrillapp.wrapper.lutung:lutung:0.0.7')

	compile('org.springframework:spring-jms')
	compile fileTree(dir: 'lib', include: '*.jar')

	compile('ee.tuleva:epis-api:1.0') //TODO: remove
	compile 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.11.0'

	// enable extension support for wsdl2java
	wsdl2java 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.11.0'
	wsdl2java 'org.jvnet.jaxb2_commons:jaxb2-basics:0.11.0'

	testCompile("com.h2database:h2")
	testCompile("org.springframework.boot:spring-boot-starter-test") {
		exclude module: "spock-core"
	}
	testCompile("org.spockframework:spock-core:1.1-groovy-2.4")
	testCompile("org.spockframework:spock-spring:1.1-groovy-2.4")
	testCompile("org.springframework.security:spring-security-test")
	testCompile("org.springframework:spring-test:4.3.7.RELEASE")
	testCompile('cglib:cglib-nodep:3.2.4') // for stubbing of classes
	testCompile('junit:junit:4.12')
}

test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showCauses true
		showExceptions true
		showStackTraces true
		exceptionFormat = 'full'
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDirs file('src/integration-test/java')
		}

		groovy {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDirs file('src/integration-test/groovy')
		}

		resources.srcDirs file('src/integration-test/resources')
	}
}

task integrationTest(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	enableAssertions = false
}

bootRun {

//	systemProperties['javax.net.debug'] = 'ssl'

//	systemProperties['com.sun.net.ssl.checkRevocation'] = 'false'

	systemProperties['spring.profiles.active'] = 'dev'
}

wsdl2java {
	wsdlsToGenerate = [
			['-xjc-Xequals', '-xjc-XhashCode', '-xjc-XtoString', 'src/main/resources/epis-wsdl/epis.wsdl']
	]
	wsdlDir = file("src/main/resources/epis-wsdl")
}
